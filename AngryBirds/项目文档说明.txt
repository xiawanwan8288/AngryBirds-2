最后更新时间：2013年1月27日

以下是对Angry Panda示例项目的简要说明：

项目最新开发环境：

Cocos2D版本：Cocos2D-iPhone v2.1 beta4（因为几乎未使用OpenGL ES，因此也兼容Cocos2D-iPhone v1.x)
iOS版本： 6.0.1（兼容4.3，5.0，5.1）
兼容设备：iPhone 5,iPhone4S,iPod Touch4,5,6(兼容iPhone4,iPhone3GS，iPad) ，因未提供适配iPad Retina的美术资源，因此在iPad Retina上的显示效果不佳
开发工具：Xcode 4.5.2(4G2008a)


本示例项目以Angry Birds（愤怒的小鸟）经典版为蓝本，模仿其中的游戏界面和交互机制，部分源码参考了Ray Wenderlich,GustavoAmbrozio Justin，Cocos2D社区等相关开发教程中的代码，并参考了Github开源代码及其它网络教程，并在相关代码基础上做了优化，调整和完善,特此致谢。

参考教程及代码包括：

http://www.raywenderlich.com/4756/how-to-make-a-catapult-shooting-game-with-cocos2d-and-box2d-part-1
http://www.raywenderlich.com/4787/how-to-make-a-catapult-shooting-game-with-cocos2d-and-box2d-part-2
http://www.binpress.com/browse?q=gamedev&u=139&utm_source=RayWenderlich&utm_medium=banner125&utm_campaign=gamedev-zelda-complete




以下是项目中的主要类及其作用说明：


一.友盟统计工具和推送（新版本和定时推送功能）

包含MobClick.h和libMobClickLibrary.a
相关代码参考AppDelegate.mm

详细配置使用方法参考友盟官方文档：http://dev.umeng.com/doc/document_ana_ios.html

二.游戏辅助类

1.Cocos2D扩展-CCScrollLayer
用于产生滑动标签的效果

2.Google XML文件解析-GDataXMLNode
用于解析XML文件（关卡数据）

3.游戏场景切换-SceneManager
用于统一管理各场景间的切换

4.游戏音效管理
用于统一管理游戏中的音效，目前还尚待完善

三.游戏数据

1.场景数据(Chapters.xml,ChapterParser,Chapter,Chapters)
用于选择关卡场景

2.关卡数据(Levels-Chapter1.xml,...,Level,LevelParser,Levels)
用于选择大场景中的小关卡

3.游戏常量-Constants.h
保存游戏中的常量

4.游戏状态和数据-GameData
用于持久化保存玩家的游戏状态和数据
其中使用NSUserDefaults来存储玩家的数据，

四.主要游戏场景
1.资源加载界面（LoadingScreen)
用于资源预加载

2.游戏开始界面(StartGameScene)

游戏启动后的首界面，其作用很简单，当用户触碰Play按钮后即可进入关卡选择界面

3.关于界面（About)
游戏和开发团队的相关信息

4.场景选择界面（ChapterSelect)
用于选择大的游戏场景

5.关卡选择界面(LevelSelect)
用于选择某个场景中的具体关卡

6.游戏主场景（MainScene)
玩家交互的主要场景

7.游戏暂停界面(GamePause)
游戏暂停时所显示的界面

8.关卡结束界面(LevelResult)
关卡结束时显示游戏的结果
使用该界面显示当前关卡是否通过，关卡得分，历史最高得分等信息，并可以进入下一关卡或返回关卡选择界面


五.游戏逻辑

1.碰撞检测机制(ContactListener)
用于检测Box2D世界发生的物体碰撞

六.游戏中的视觉元素（物体）

1.定制动画（CustomAnimation)
可定制的动画，目前尚待完善

2.抽象物体类(PhysicsNode)
该类直接继承自CCNode类，是CCNode类和b2Body类的拓展，其中的实例方法分别用于使用精灵帧来创建物体，删除物体，删除精灵，淡出并消失，让物体成为静态，删除精灵和物体。

3.地平面物体（GroundPlane)
放置在主场景中的地平面物体

4.发射平台（FirePlatform）

该类用于创建抛投熊猫所使用的平台物体

5.游戏中的敌对角色（Enemy）

顾名思义，该类将用于创建和管理游戏中的敌人角色
该类将在ShootingTargets类中创建，它继承自PhysicsNode，其中所定义的几个实例方法作用分别是在Box2D世界中初始化并创建敌人，创建敌人，让敌人受到伤害，让敌人分解，以及令其不会产生得分（防止在同一物体上两次得分 ）



6.游戏中玩家可操控的角色熊猫（Panda）

该类将用于创建和管理游戏中的熊猫角色（玩家控制角色）
该类将在MainScene类中创建，它继承自PhysicsNode，其中所定义的几个实例方法分别用于在Box2D中初始化并创建熊猫，创建熊猫


7.游戏中的障碍物（StackObject）

该类将用于创建及并管理游戏中的遮挡物
该类将在ShootingTargets类中创建，它继承自PhysicsNode，其中所定义的几个实例方法作用分别是在Box2D世界中初始化并创建遮挡物，创建物体，启动分解动画，当与地面接触时播放分解动画，当与熊猫接触时播放分解动画，以及令其不会产生得分（防止在同一物体上两次得分 ）


8.游戏中的待攻击目标（ShootingTargets）

该类将用于在各关卡场景中创建遮挡物和敌人。
游戏中的遮挡物和敌人都将使用该类创建

因为软件版本和功能特性的变化，示例项目中的代码和书中有一些差异，请参考示例代码为准。

七.其它类
